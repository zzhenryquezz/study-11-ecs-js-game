import{E as g,U as Xe,T as $,V as H,k as P,Q as oe,c as le,w as Ye,s as C,l as G,P as Ne,R as ce,t as Ke,N as ue,O as de,b as z,B as F,p as w,W as qe,D as L,X as he,Y as je,Z as I,_ as Ve,M as Q,$ as $e,a0 as Qe,a1 as Ze,a2 as Je,a3 as X,x as Z,a4 as U,j as J,a5 as et,a6 as tt,K as rt,a7 as ee,a8 as te,e as y,a9 as st,aa as it}from"./index-UtZmkIbQ.js";import{U as A,S as fe,i as Y,b as pe,c as ge,j as me,e as at,r as _e,o as nt,n as xe,a as ot,g as lt,k as ct,m as ut,B as be}from"./colorToUniform-uJnhMJNv.js";import{b as dt}from"./batchSamplersUniformGroup-T-rnKy3A.js";class Te{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:s,clientHeight:i}=this._resizeTo;t=s,r=i}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}Te.extension=g.Application;class ye{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,Xe.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?$.shared:new $,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}ye.extension=g.Application;class ve{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}ve.extension={type:[g.WebGLPipes,g.WebGPUPipes,g.CanvasPipes],name:"filter"};const ht=new P;function ft(n,e){return e.clear(),Se(n,e),e.isValid||e.set(0,0,0,0),n.isRenderGroupRoot?e.applyMatrix(n.renderGroup.localTransform):e.applyMatrix(n.renderGroup.worldTransform),e}function Se(n,e){if(n.localDisplayStatus!==7||!n.measurable)return;const t=!!n.effects.length;let r=e;if((n.isRenderGroupRoot||t)&&(r=H.get().clear()),n.boundsArea)e.addRect(n.boundsArea,n.worldTransform);else{if(n.renderPipeId){const i=n.bounds;r.addFrame(i.minX,i.minY,i.maxX,i.maxY,n.groupTransform)}const s=n.children;for(let i=0;i<s.length;i++)Se(s[i],r)}if(t){let s=!1;for(let i=0;i<n.effects.length;i++)n.effects[i].addBounds&&(s||(s=!0,r.applyMatrix(n.renderGroup.worldTransform)),n.effects[i].addBounds(r,!0));s&&(r.applyMatrix(n.renderGroup.worldTransform.copyTo(ht).invert()),e.addBounds(r,n.relativeGroupTransform)),e.addBounds(r),H.return(r)}else n.isRenderGroupRoot&&(e.addBounds(r,n.relativeGroupTransform),H.return(r))}function pt(n,e){e.clear();const t=e.matrix;for(let r=0;r<n.length;r++){const s=n[r];s.globalDisplayStatus<7||(e.matrix=s.worldTransform,s.addBounds(e))}return e.matrix=t,e}const gt=new oe({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),location:0,format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class Be{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new A({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new le({}),this.renderer=e}push(e){var h;const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const s=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){s.skip=!0;return}const i=s.bounds;e.renderables?pt(e.renderables,i):e.filterEffect.filterArea?(i.clear(),i.addRect(e.filterEffect.filterArea),i.applyMatrix(e.container.worldTransform)):ft(e.container,i);const a=t.renderTarget.rootRenderTarget.colorTexture.source;let o=a._resolution,l=0,d=a.antialias,u=!1,c=!1;for(let f=0;f<r.length;f++){const p=r[f];if(o=Math.min(o,p.resolution),l+=p.padding,p.antialias!=="inherit"&&(p.antialias==="on"?d=!0:d=!1),!!!(p.compatibleRenderers&t.type)){c=!1;break}if(p.blendRequired&&!(((h=t.backBuffer)==null?void 0:h.useBackBuffer)??!0)){Ye("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),c=!1;break}c=p.enabled||c,u=u||p.blendRequired}if(!c){s.skip=!0;return}if(i.scale(o).fit(t.renderTarget.rootViewPort).scale(1/o).pad(l).ceil(),!i.isPositive){s.skip=!0;return}s.skip=!1,s.bounds=i,s.blendRequired=u,s.container=e.container,s.filterEffect=e.filterEffect,s.previousRenderSurface=t.renderTarget.renderSurface,s.inputTexture=C.getOptimalTexture(i.width,i.height,o,d),t.renderTarget.bind(s.inputTexture,!0),t.globalUniforms.push({offset:i})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,s=t.bounds;let i=G.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const o=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,l=e.renderTarget.getRenderTarget(t.previousRenderSurface);i=this.getBackTexture(l,s,o)}t.backTexture=i;const a=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(i.source,3),e.globalUniforms.pop(),a.length===1)a[0].apply(this,r,t.previousRenderSurface,!1),C.returnTexture(r);else{let o=t.inputTexture,l=C.getOptimalTexture(s.width,s.height,o.source._resolution,!1),d=0;for(d=0;d<a.length-1;++d){a[d].apply(this,o,l,!0);const c=o;o=l,l=c}a[d].apply(this,o,t.previousRenderSurface,!1),C.returnTexture(o),C.returnTexture(l)}t.blendRequired&&C.returnTexture(i)}getBackTexture(e,t,r){const s=e.colorTexture.source._resolution,i=C.getOptimalTexture(t.width,t.height,s,!1);let a=t.minX,o=t.minY;r&&(a-=r.minX,o-=r.minY),a=Math.floor(a*s),o=Math.floor(o*s);const l=Math.ceil(t.width*s),d=Math.ceil(t.height*s);return this.renderer.renderTarget.copyToTexture(e,i,{x:a,y:o},{width:l,height:d}),i}applyFilter(e,t,r,s){const i=this.renderer,a=this._filterStack[this._filterStackIndex],o=a.bounds,l=Ne.shared,u=a.previousRenderSurface===r;let c=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,h=this._filterStackIndex-1;for(;h>0&&this._filterStack[h].skip;)--h;h>0&&(c=this._filterStack[h].inputTexture.source._resolution);const f=this._filterGlobalUniforms,p=f.uniforms,m=p.uOutputFrame,_=p.uInputSize,x=p.uInputPixel,b=p.uInputClamp,v=p.uGlobalFrame,S=p.uOutputTexture;if(u){let M=this._filterStackIndex;for(;M>0;){M--;const R=this._filterStack[this._filterStackIndex-1];if(!R.skip){l.x=R.bounds.minX,l.y=R.bounds.minY;break}}m[0]=o.minX-l.x,m[1]=o.minY-l.y}else m[0]=0,m[1]=0;m[2]=t.frame.width,m[3]=t.frame.height,_[0]=t.source.width,_[1]=t.source.height,_[2]=1/_[0],_[3]=1/_[1],x[0]=t.source.pixelWidth,x[1]=t.source.pixelHeight,x[2]=1/x[0],x[3]=1/x[1],b[0]=.5*x[2],b[1]=.5*x[3],b[2]=t.frame.width*_[2]-.5*x[2],b[3]=t.frame.height*_[3]-.5*x[3];const k=this.renderer.renderTarget.rootRenderTarget.colorTexture;v[0]=l.x*c,v[1]=l.y*c,v[2]=k.source.width*c,v[3]=k.source.height*c;const B=this.renderer.renderTarget.getRenderTarget(r);if(i.renderTarget.bind(r,!!s),r instanceof G?(S[0]=r.frame.width,S[1]=r.frame.height):(S[0]=B.width,S[1]=B.height),S[2]=B.isRoot?-1:1,f.update(),i.renderPipes.uniformBatch){const M=i.renderPipes.uniformBatch.getUboResource(f);this._globalFilterBindGroup.setResource(M,0)}else this._globalFilterBindGroup.setResource(f,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,i.encoder.draw({geometry:gt,shader:e,state:e._state,topology:"triangle-list"}),i.type===ce.WEBGL&&i.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new Ke,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,s=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),i=t.worldTransform.copyTo(P.shared);return i.invert(),s.prepend(i),s.scale(1/t.texture.frame.width,1/t.texture.frame.height),s.translate(t.anchor.x,t.anchor.y),s}}Be.extension={type:[g.WebGLSystem,g.WebGPUSystem],name:"filter"};const we=class Pe extends oe{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(ue(de,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...Pe.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]),s=t.uvs||new Float32Array([0,0,1,0,1,1,0,1]),i=t.indices||new Uint32Array([0,1,2,0,2,3]),a=t.shrinkBuffersToFit,o=new z({data:r,label:"attribute-mesh-positions",shrinkToFit:a,usage:F.VERTEX|F.COPY_DST}),l=new z({data:s,label:"attribute-mesh-uvs",shrinkToFit:a,usage:F.VERTEX|F.COPY_DST}),d=new z({data:i,label:"index-mesh-buffer",shrinkToFit:a,usage:F.INDEX|F.COPY_DST});super({attributes:{aPosition:{buffer:o,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:l,format:"float32x2",stride:2*4,offset:0}},indexBuffer:d,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};we.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let N=we;class Ce{constructor(e,t){this.state=fe.for2d(),this._graphicsBatchesHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],s=this.renderer.graphicsContext.updateGpuContext(t);return!!(s.isBatchable||r!==s.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e._didGraphicsUpdate&&(e._didGraphicsUpdate=!1,this._rebuild(e)),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const s=t[r];s.batcher.updateElement(s)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const i=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const a=i.resources.localUniforms.uniforms;a.uTransformMatrix=e.groupTransform,a.uRound=t._roundPixels|e._roundPixels,Y(e.groupColorAlpha,a.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,s=this._getBatchesForRenderable(e);for(let i=0;i<s.length;i++){const a=s[i];r.addToBatch(a,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),s=this.renderer._roundPixels|e._roundPixels,i=r.batches.map(a=>{const o=w.get(qe);return a.copyTo(o),o.renderable=e,o.roundPixels=s,o});return this._graphicsBatchesHash[e.uid]=i,e.on("destroyed",()=>{this.destroyRenderable(e)}),i}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{w.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}Ce.extension={type:[g.WebGLPipes,g.WebGPUPipes,g.CanvasPipes],name:"graphics"};const Me=class Re extends N{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(ue(de,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...Re.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],s=[],i=[],a=this.verticesX-1,o=this.verticesY-1,l=this.width/a,d=this.height/o;for(let c=0;c<t;c++){const h=c%this.verticesX,f=c/this.verticesX|0;r.push(h*l,f*d),s.push(h/a,f/o)}const u=a*o;for(let c=0;c<u;c++){const h=c%a,f=c/a|0,p=f*this.verticesX+h,m=f*this.verticesX+h+1,_=(f+1)*this.verticesX+h,x=(f+1)*this.verticesX+h+1;i.push(p,m,_,m,x,_)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(s),this.indexBuffer.data=new Uint32Array(i),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};Me.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let mt=Me;class K{constructor(){this.batcher=null,this.batch=null,this.roundPixels=0}get blendMode(){return this.mesh.groupBlendMode}reset(){this.mesh=null,this.texture=null,this.batcher=null,this.batch=null}packIndex(e,t,r){const s=this.geometry.indices;for(let i=0;i<s.length;i++)e[t++]=s[i]+r}packAttributes(e,t,r,s){const i=this.mesh,a=this.geometry,o=i.groupTransform,l=s<<16|this.roundPixels&65535,d=o.a,u=o.b,c=o.c,h=o.d,f=o.tx,p=o.ty,m=a.positions,_=a.uvs,x=i.groupColorAlpha;for(let b=0;b<m.length;b+=2){const v=m[b],S=m[b+1];e[r]=d*v+c*S+f,e[r+1]=u*v+h*S+p,e[r+2]=_[b],e[r+3]=_[b+1],t[r+4]=x,t[r+5]=l,r+=6}}get vertexSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class Fe{constructor(e,t){this.localUniforms=new A({uTransformMatrix:{value:new P,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new le({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,s=e.batched;if(t.batched=s,r!==s)return!0;if(s){const i=e._geometry;if(i.indices.length!==t.indexSize||i.positions.length!==t.vertexSize)return t.indexSize=i.indices.length,t.vertexSize=i.positions.length,!0;const a=this._getBatchableMesh(e),o=e.texture;if(a.texture._source!==o._source&&a.texture._source!==o._source)return a.batcher.checkAndUpdateTexture(a,o)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:s}=this._getMeshData(e);if(s){const i=this._getBatchableMesh(e);i.texture=e._texture,i.geometry=e._geometry,r.addToBatch(i)}else r.break(t),t.add({renderPipeId:"mesh",mesh:e})}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t.batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];w.return(t),this._gpuBatchableMeshHash[e.uid]=null}execute({mesh:e}){if(!e.isRenderable)return;e.state.blendMode=e.groupBlendMode;const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),Y(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=w.get(K);return t.mesh=e,t.texture=e._texture,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t.mesh=e,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&w.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}Fe.extension={type:[g.WebGLPipes,g.WebGPUPipes,g.CanvasPipes],name:"mesh"};const Ue=class Ge extends mt{constructor(e={}){e={...Ge.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this._textureMatrix=new P,this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,e.textureMatrix&&this._textureMatrix.copyFrom(e.textureMatrix),this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,s=this._topHeight+this._bottomHeight,i=this.height>s?1:this.height/s,a=Math.min(r,i);e[9]=e[11]=e[13]=e[15]=this._topHeight*a,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*a,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*a,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*a,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this._textureMatrix,t=this.uvs;t[0]=t[8]=t[16]=t[24]=0,t[1]=t[3]=t[5]=t[7]=0,t[6]=t[14]=t[22]=t[30]=1,t[25]=t[27]=t[29]=t[31]=1;const r=1/this._originalWidth,s=1/this._originalHeight;t[2]=t[10]=t[18]=t[26]=r*this._leftWidth,t[9]=t[11]=t[13]=t[15]=s*this._topHeight,t[4]=t[12]=t[20]=t[28]=1-r*this._rightWidth,t[17]=t[19]=t[21]=t[23]=1-s*this._bottomHeight,xt(e,t),this.getBuffer("aUV").update()}};Ue.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let _t=Ue;function xt(n,e,t){t??(t=e);const r=n.a,s=n.b,i=n.c,a=n.d,o=n.tx,l=n.ty;for(let d=0;d<e.length;d+=2){const u=e[d],c=e[d+1];t[d]=u*r+c*i+o,t[d+1]=u*s+c*a+l}return t}class ke{constructor(e){this._gpuSpriteHash=Object.create(null),this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e._didSpriteUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e._didSpriteUpdate&&this._updateBatchableSprite(e,t),t.batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source?!r.batcher.checkAndUpdateTexture(r,t):!1}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];w.return(t),this._gpuSpriteHash[e.uid]=null}_updateBatchableSprite(e,t){e._didSpriteUpdate=!1,t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new K;return t.geometry=new _t,t.mesh=e,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}ke.extension={type:[g.WebGLPipes,g.WebGPUPipes,g.CanvasPipes],name:"nineSliceSprite"};const bt={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            vUV = (tilingUniforms.uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},Tt={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            vUV = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let W,O;class yt extends pe{constructor(){W??(W=ge({name:"tiling-sprite-shader",bits:[at,bt,_e]})),O??(O=me({name:"tiling-sprite-shader",bits:[nt,Tt,xe]}));const e=new A({uMapCoord:{value:new P,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new P,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:O,gpuProgram:W,resources:{localUniforms:new A({uTransformMatrix:{value:new P,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:G.EMPTY.source,uSampler:G.EMPTY.source.style}})}updateUniforms(e,t,r,s,i,a){const o=this.resources.tilingUniforms,l=a.width,d=a.height,u=a.textureMatrix,c=o.uniforms.uTextureTransform;c.set(r.a*l/e,r.b*l/t,r.c*d/e,r.d*d/t,r.tx/e,r.ty/t),c.invert(),o.uniforms.uMapCoord=u.mapCoord,o.uniforms.uClampFrame=u.uClampFrame,o.uniforms.uClampOffset=u.uClampOffset,o.uniforms.uTextureTransform=c,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=s,o.uniforms.uSizeAnchor[3]=i,a&&(this.resources.uTexture=a.source,this.resources.uSampler=a.source.style)}}class vt extends N{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function St(n,e){const t=n.anchor.x,r=n.anchor.y;e[0]=-t*n.width,e[1]=-r*n.height,e[2]=(1-t)*n.width,e[3]=-r*n.height,e[4]=(1-t)*n.width,e[5]=(1-r)*n.height,e[6]=-t*n.width,e[7]=(1-r)*n.height}function Bt(n,e,t,r){let s=0;const i=n.length/(e||2),a=r.a,o=r.b,l=r.c,d=r.d,u=r.tx,c=r.ty;for(t*=e;s<i;){const h=n[t],f=n[t+1];n[t]=a*h+l*f+u,n[t+1]=o*h+d*f+c,t+=e,s++}}function wt(n,e){const t=n.texture,r=t.frame.width,s=t.frame.height;let i=0,a=0;n._applyAnchorToTexture&&(i=n.anchor.x,a=n.anchor.y),e[0]=e[6]=-i,e[2]=e[4]=1-i,e[1]=e[3]=-a,e[5]=e[7]=1-a;const o=P.shared;o.copyFrom(n._tileTransform.matrix),o.tx/=n.width,o.ty/=n.height,o.invert(),o.scale(n.width/r,n.height/s),Bt(e,2,0,o)}const D=new vt;class Ae{constructor(e){this._tilingSpriteDataHash=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const s=t.canBatch;if(s&&s===r){const{batchableMesh:i}=t;if(i.texture._source!==e.texture._source)return!i.batcher.checkAndUpdateTexture(i,e.texture)}return r!==s}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const s=this._getTilingSpriteData(e),{geometry:i,canBatch:a}=s;if(a){s.batchableMesh||(s.batchableMesh=new K);const o=s.batchableMesh;e._didTilingSpriteUpdate&&(e._didTilingSpriteUpdate=!1,this._updateBatchableMesh(e),o.geometry=i,o.mesh=e,o.texture=e._texture),o.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(o)}else r.break(t),s.shader||(s.shader=new yt),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,Y(e.groupColorAlpha,r.uColor,0),this._renderer.encoder.draw({geometry:D,shader:t,state:fe.default2d})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:s}=t;e._didTilingSpriteUpdate&&this._updateBatchableMesh(e),s.batcher.updateElement(s)}else if(e._didTilingSpriteUpdate){const{shader:s}=t;s.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}e._didTilingSpriteUpdate=!1}destroyRenderable(e){var r;const t=this._getTilingSpriteData(e);t.batchableMesh=null,(r=t.shader)==null||r.destroy(),this._tilingSpriteDataHash[e.uid]=null}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new N({indices:D.indices,positions:D.positions.slice(),uvs:D.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,s=e.texture.source.style;s.addressMode!=="repeat"&&(s.addressMode="repeat",s.update()),wt(e,r.uvs),St(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let s=!0;return this._renderer.type===ce.WEBGL&&(s=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(s||r.source.isPowerOfTwo),t.canBatch}}Ae.extension={type:[g.WebGLPipes,g.WebGPUPipes,g.CanvasPipes],name:"tilingSprite"};const E={test(n){return typeof n=="string"&&n.startsWith("info face=")},parse(n){const e=n.match(/^[a-z]+\s+.+$/gm),t={info:[],common:[],page:[],char:[],chars:[],kerning:[],kernings:[],distanceField:[]};for(const c in e){const h=e[c].match(/^[a-z]+/gm)[0],f=e[c].match(/[a-zA-Z]+=([^\s"']+|"([^"]*)")/gm),p={};for(const m in f){const _=f[m].split("="),x=_[0],b=_[1].replace(/"/gm,""),v=parseFloat(b),S=isNaN(v)?b:v;p[x]=S}t[h].push(p)}const r={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},[s]=t.info,[i]=t.common,[a]=t.distanceField??[];a&&(r.distanceField={range:parseInt(a.distanceRange,10),type:a.fieldType}),r.fontSize=parseInt(s.size,10),r.fontFamily=s.face,r.lineHeight=parseInt(i.lineHeight,10);const o=t.page;for(let c=0;c<o.length;c++)r.pages.push({id:parseInt(o[c].id,10)||0,file:o[c].file});const l={};r.baseLineOffset=r.lineHeight-parseInt(i.base,10);const d=t.char;for(let c=0;c<d.length;c++){const h=d[c],f=parseInt(h.id,10);let p=h.letter??h.char??String.fromCharCode(f);p==="space"&&(p=" "),l[f]=p,r.chars[p]={id:f,page:parseInt(h.page,10)||0,x:parseInt(h.x,10),y:parseInt(h.y,10),width:parseInt(h.width,10),height:parseInt(h.height,10),xOffset:parseInt(h.xoffset,10),yOffset:parseInt(h.yoffset,10),xAdvance:parseInt(h.xadvance,10),kerning:{}}}const u=t.kerning||[];for(let c=0;c<u.length;c++){const h=parseInt(u[c].first,10),f=parseInt(u[c].second,10),p=parseInt(u[c].amount,10);r.chars[l[f]].kerning[l[h]]=p}return r}},re={test(n){const e=n;return typeof e!="string"&&"getElementsByTagName"in e&&e.getElementsByTagName("page").length&&e.getElementsByTagName("info")[0].getAttribute("face")!==null},parse(n){const e={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},t=n.getElementsByTagName("info")[0],r=n.getElementsByTagName("common")[0],s=n.getElementsByTagName("distanceField")[0];s&&(e.distanceField={type:s.getAttribute("fieldType"),range:parseInt(s.getAttribute("distanceRange"),10)});const i=n.getElementsByTagName("page"),a=n.getElementsByTagName("char"),o=n.getElementsByTagName("kerning");e.fontSize=parseInt(t.getAttribute("size"),10),e.fontFamily=t.getAttribute("face"),e.lineHeight=parseInt(r.getAttribute("lineHeight"),10);for(let d=0;d<i.length;d++)e.pages.push({id:parseInt(i[d].getAttribute("id"),10)||0,file:i[d].getAttribute("file")});const l={};e.baseLineOffset=e.lineHeight-parseInt(r.getAttribute("base"),10);for(let d=0;d<a.length;d++){const u=a[d],c=parseInt(u.getAttribute("id"),10);let h=u.getAttribute("letter")??u.getAttribute("char")??String.fromCharCode(c);h==="space"&&(h=" "),l[c]=h,e.chars[h]={id:c,page:parseInt(u.getAttribute("page"),10)||0,x:parseInt(u.getAttribute("x"),10),y:parseInt(u.getAttribute("y"),10),width:parseInt(u.getAttribute("width"),10),height:parseInt(u.getAttribute("height"),10),xOffset:parseInt(u.getAttribute("xoffset"),10),yOffset:parseInt(u.getAttribute("yoffset"),10),xAdvance:parseInt(u.getAttribute("xadvance"),10),kerning:{}}}for(let d=0;d<o.length;d++){const u=parseInt(o[d].getAttribute("first"),10),c=parseInt(o[d].getAttribute("second"),10),h=parseInt(o[d].getAttribute("amount"),10);e.chars[l[c]].kerning[l[u]]=h}return e}},se={test(n){return typeof n=="string"&&n.includes("<font>")?re.test(L.get().parseXML(n)):!1},parse(n){return re.parse(L.get().parseXML(n))}},Pt=[".xml",".fnt"],Ct={extension:g.CacheParser,test:n=>n instanceof he,getCacheableAssets(n,e){const t={};return n.forEach(r=>{t[r]=e}),t[`${e.fontFamily}-bitmap`]=e,t}},Mt={extension:{type:g.LoadParser,priority:je.Normal},test(n){return Pt.includes(I.extname(n).toLowerCase())},async testParse(n){return E.test(n)||se.test(n)},async parse(n,e,t){const r=E.test(n)?E.parse(n):se.parse(n),{src:s}=e,{pages:i}=r,a=[];for(let u=0;u<i.length;++u){const c=i[u].file;let h=I.join(I.dirname(s),c);h=Ve(h,s),a.push(h)}const o=await t.load(a),l=a.map(u=>o[u]);return new he({data:r,textures:l},s)},async load(n,e){return await(await L.get().fetch(n)).text()},unload(n){n.destroy()}},Rt={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, localUniforms.uDistance);
        `}},Ft={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, uDistance);
        `}},Ut={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}},Gt={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}};class kt extends pe{constructor(){const e=new A({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new P,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=ge({name:"sdf-shader",bits:[ot,lt(Q),Rt,Ut,_e]}),r=me({name:"sdf-shader",bits:[ct,ut(Q),Ft,Gt,xe]});super({glProgram:r,gpuProgram:t,resources:{localUniforms:e,batchSamplers:dt}})}}class De{constructor(e){this._gpuBitmapText={},this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);ie(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){w.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);ie(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){var f;const{context:r}=t,s=$e.getFont(e.text,e._style);r.clear(),s.distanceField.type!=="none"&&(r.customShader||(this._sdfShader||(this._sdfShader=new kt),r.customShader=this._sdfShader));const i=Array.from(e.text),a=e._style;let o=(((f=a._stroke)==null?void 0:f.width)||0)/2;o+=s.baseLineOffset;const l=Qe(i,a,s);let d=0;const u=a.padding,c=l.scale;r.translate(-e._anchor._x*l.width-u,-e._anchor._y*(l.height+l.offsetY)-u).scale(c,c);const h=a._fill.color;for(let p=0;p<l.lines.length;p++){const m=l.lines[p];for(let _=0;_<m.charPositions.length;_++){const x=i[d++],b=s.chars[x];b!=null&&b.texture&&r.texture(b.texture,h,Math.round(m.charPositions[_]+b.xOffset),Math.round(o+b.yOffset))}o+=s.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=w.get(Ze);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",()=>{this.destroyRenderable(e)}),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,s=Je.get(`${r}-bitmap`),{a:i,b:a,c:o,d:l}=e.groupTransform,d=Math.sqrt(i*i+a*a),u=Math.sqrt(o*o+l*l),c=(Math.abs(d)+Math.abs(u))/2,h=s.baseRenderedFontSize/e._style.fontSize,f=e.resolution??this._renderer.resolution,p=c*s.distanceField.range*(1/h)*f;t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){var e;for(const t in this._gpuBitmapText)this._destroyRenderableByUid(t);this._gpuBitmapText=null,(e=this._sdfShader)==null||e.destroy(!0),this._sdfShader=null,this._renderer=null}}De.extension={type:[g.WebGLPipes,g.WebGPUPipes,g.CanvasPipes],name:"bitmapText"};function ie(n,e){e.groupTransform=n.groupTransform,e.groupColorAlpha=n.groupColorAlpha,e.groupColor=n.groupColor,e.groupBlendMode=n.groupBlendMode,e.globalDisplayStatus=n.globalDisplayStatus,e.groupTransform=n.groupTransform,e.localDisplayStatus=n.localDisplayStatus,e.groupAlpha=n.groupAlpha,e._roundPixels=n._roundPixels}class He{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),w.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(a=>{console.error(a)}),e._didTextUpdate=!1;const i=e._style.padding;X(s.bounds,e._anchor,s.texture,i)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const s=e.resolution??this._renderer.resolution,i=await this._renderer.htmlText.getManagedTexture(e.text,s,e._style,e._getKey()),a=t.batchableSprite;a.texture=t.texture=i,t.generatingTexture=!1,t.textureNeedsUploading=!0,e._onUpdate();const o=e._style.padding;X(a.bounds,e._anchor,a.texture,o)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:G.EMPTY,currentKey:"--",batchableSprite:w.get(be),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.texture=G.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}He.extension={type:[g.WebGLPipes,g.WebGPUPipes,g.CanvasPipes],name:"htmlText"};class ze{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();if(t.currentKey!==r){const s=e.resolution??this._renderer.resolution,{width:i,height:a}=this._renderer.canvasText.getTextureSize(e.text,s,e._style);return!(this._renderer.canvasText.getReferenceCount(t.currentKey)===1&&i===t.texture._source.width&&a===t.texture._source.height)}return!1}addRenderable(e,t){const s=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(s)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),w.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const i=e._style.padding;X(s.bounds,e._anchor,s.texture,i)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey);const s=e.resolution??this._renderer.resolution;t.texture=r.texture=this._renderer.canvasText.getTexture(e.text,s,e._style,e._getKey()),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:w.get(be)};return t.batchableSprite.renderable=e,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,this._updateText(e),e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}ze.extension={type:[g.WebGLPipes,g.WebGPUPipes,g.CanvasPipes],name:"text"};function ae(n,e,t){for(let r=0,s=4*t*e;r<e;++r,s+=4)if(n[s+3]!==0)return!1;return!0}function ne(n,e,t,r,s){const i=4*e;for(let a=r,o=r*i+4*t;a<=s;++a,o+=i)if(n[o+3]!==0)return!1;return!0}function At(n,e=1){const{width:t,height:r}=n,s=n.getContext("2d",{willReadFrequently:!0});if(s===null)throw new TypeError("Failed to get canvas 2D context");const a=s.getImageData(0,0,t,r).data;let o=0,l=0,d=t-1,u=r-1;for(;l<r&&ae(a,t,l);)++l;if(l===r)return Z.EMPTY;for(;ae(a,t,u);)--u;for(;ne(a,t,o,l,u);)++o;for(;ne(a,t,d,l,u);)--d;return++d,++u,new Z(o/e,l/e,(d-o)/e,(u-l)/e)}class Ie{constructor(){this._activeTextures={}}getTextureSize(e,t,r){const s=U.measureText(e||" ",r);let i=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*t),a=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*t);return i=Math.ceil(i-1e-6),a=Math.ceil(a-1e-6),i=te(i),a=te(a),{width:i,height:a}}getTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].texture;const i=U.measureText(e||" ",r),a=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*t),o=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*t),l=J.getOptimalCanvasAndContext(a,o),{canvas:d}=l;this.renderTextToCanvas(e,r,t,l);const u=et(d,a,o,t);if(r.trim){const c=At(d,t);u.frame.copyFrom(c),u.updateUvs()}return this._activeTextures[s]={canvasAndContext:l,texture:u,usageCount:1},u}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,t.usageCount===0){J.returnCanvasAndContext(t.canvasAndContext),C.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,s){var b,v,S,k;const{canvas:i,context:a}=s,o=tt(t),l=U.measureText(e||" ",t),d=l.lines,u=l.lineHeight,c=l.lineWidths,h=l.maxLineWidth,f=l.fontProperties,p=i.height;if(a.resetTransform(),a.scale(r,r),a.clearRect(0,0,l.width+4,l.height+4),(b=t._stroke)!=null&&b.width){const B=t._stroke;a.lineWidth=B.width,a.miterLimit=B.miterLimit,a.lineJoin=B.join,a.lineCap=B.cap}a.font=o;let m,_;const x=t.dropShadow?2:1;for(let B=0;B<x;++B){const M=t.dropShadow&&B===0,R=M?Math.ceil(Math.max(1,p)+t.padding*2):0,We=R*r;if(M){a.fillStyle="black",a.strokeStyle="black";const T=t.dropShadow,Oe=T.color,Ee=T.alpha;a.shadowColor=rt.shared.setValue(Oe).setAlpha(Ee).toRgbaString();const Le=T.blur*r,V=T.distance*r;a.shadowBlur=Le,a.shadowOffsetX=Math.cos(T.angle)*V,a.shadowOffsetY=Math.sin(T.angle)*V+We}else a.globalAlpha=((v=t._fill)==null?void 0:v.alpha)??1,a.fillStyle=t._fill?ee(t._fill,a):null,(S=t._stroke)!=null&&S.width&&(a.strokeStyle=ee(t._stroke,a)),a.shadowColor="black";let q=(u-f.fontSize)/2;u-f.fontSize<0&&(q=0);const j=((k=t._stroke)==null?void 0:k.width)??0;for(let T=0;T<d.length;T++)m=j/2,_=j/2+T*u+f.ascent+q,t.align==="right"?m+=h-c[T]:t.align==="center"&&(m+=(h-c[T])/2),t._stroke&&this._drawLetterSpacing(d[T],t,s,m+t.padding,_+t.padding-R,!0),t._fill!==void 0&&this._drawLetterSpacing(d[T],t,s,m+t.padding,_+t.padding-R)}}_drawLetterSpacing(e,t,r,s,i,a=!1){const{context:o}=r,l=t.letterSpacing;let d=!1;if(U.experimentalLetterSpacingSupported&&(U.experimentalLetterSpacing?(o.letterSpacing=`${l}px`,o.textLetterSpacing=`${l}px`,d=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),l===0||d){a?o.strokeText(e,s,i):o.fillText(e,s,i);return}let u=s;const c=U.graphemeSegmenter(e);let h=o.measureText(e).width,f=0;for(let p=0;p<c.length;++p){const m=c[p];a?o.strokeText(m,u,i):o.fillText(m,u,i);let _="";for(let x=p+1;x<c.length;++x)_+=c[x];f=o.measureText(_).width,u+=h-f+l,h=f}}destroy(){this._activeTextures=null}}Ie.extension={type:[g.WebGLSystem,g.WebGPUSystem,g.CanvasSystem],name:"canvasText"};y.add(Te);y.add(ye);y.add(Ce);y.add(st);y.add(Fe);y.add(Ie);y.add(ze);y.add(De,Mt,Ct);y.add(it);y.add(He);y.add(Ae);y.add(ke);y.add(Be);y.add(ve);
